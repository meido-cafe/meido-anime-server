// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package factory

import (
	"github.com/jmoiron/sqlx"
	"meido-anime-server/config"
	"meido-anime-server/internal/api/v1"
	"meido-anime-server/internal/common"
	"meido-anime-server/internal/repo"
	"meido-anime-server/internal/service"
	"meido-anime-server/internal/tool"
)

// Injectors from common.go:

func NewDB() *sqlx.DB {
	configConfig := config.NewConfig()
	db := common.NewDB(configConfig)
	return db
}

func NewSqlTool() *tool.Sql {
	sql := tool.NewSql()
	return sql
}

func NewQB() *common.QB {
	configConfig := config.NewConfig()
	qb := common.NewQB(configConfig)
	return qb
}

// Injectors from cron.go:

func NewCronService() *service.CronService {
	videoService := NewVideoService()
	cronService := service.NewCronService(videoService)
	return cronService
}

// Injectors from init.go:

func NewInitService() *service.InitService {
	videoService := NewVideoService()
	cronService := NewCronService()
	initService := service.NewInitService(videoService, cronService)
	return initService
}

// Injectors from rss.go:

func NewRssRepo() repo.RssInterface {
	db := NewDB()
	rssInterface := repo.NewRssRepo(db)
	return rssInterface
}

func NewRssService() *service.RssService {
	rssInterface := NewRssRepo()
	rssService := service.NewRssService(rssInterface)
	return rssService
}

func NewRssApi() *v1.RssApi {
	rssService := NewRssService()
	rssApi := v1.NewRssApi(rssService)
	return rssApi
}

// Injectors from video.go:

func NewVideoRepo() repo.VideoInterface {
	db := NewDB()
	sql := NewSqlTool()
	qb := NewQB()
	videoInterface := repo.NewVideoRepo(db, sql, qb)
	return videoInterface
}

func NewVideoService() *service.VideoService {
	videoInterface := NewVideoRepo()
	videoService := service.NewVideoService(videoInterface)
	return videoService
}

func NewVideoApi() *v1.VideoApi {
	videoService := NewVideoService()
	videoApi := v1.NewVideoApi(videoService)
	return videoApi
}
